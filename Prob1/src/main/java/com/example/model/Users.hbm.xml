<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Generated Mar 26, 2024, 9:45:28 AM by Hibernate Tools 3.6.2.Final --><!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping auto-import="true" default-access="property" default-cascade="none" default-lazy="true">
    <class catalog="se" dynamic-insert="false" dynamic-update="false" mutable="true" name="com.example.model.Users" optimistic-lock="version" polymorphism="implicit" select-before-update="false" table="users">
        <id name="userId" type="string">
            <column length="10" name="userID"/>
            <generator class="assigned"/>
        </id>
        <many-to-one class="com.example.model.Branches" embed-xml="true" fetch="select" insert="true" name="branches" not-found="exception" optimistic-lock="true" unique="false" update="true">
            <column length="10" name="branchID" not-null="true"/>
        </many-to-one>
        <many-to-one class="com.example.model.Typeroles" embed-xml="true" fetch="select" insert="true" name="typeroles" not-found="exception" optimistic-lock="true" unique="false" update="true">
            <column length="10" name="roleID" not-null="true"/>
        </many-to-one>
        <property generated="never" lazy="false" name="firstName" optimistic-lock="true" type="string" unique="false">
            <column length="20" name="firstName" not-null="true"/>
        </property>
        <property generated="never" lazy="false" name="surName" optimistic-lock="true" type="string" unique="false">
            <column length="20" name="surName" not-null="true"/>
        </property>
        <property generated="never" lazy="false" name="email" optimistic-lock="true" type="string" unique="false">
            <column length="30" name="email" not-null="true"/>
        </property>
        <property generated="never" lazy="false" name="dateBirth" optimistic-lock="true" type="date" unique="false">
            <column length="10" name="dateBirth" not-null="true"/>
        </property>
        <property generated="never" lazy="false" name="passwordUser" optimistic-lock="true" type="string" unique="false">
            <column length="50" name="passwordUser" not-null="true"/>
        </property>
        <set embed-xml="true" fetch="select" inverse="true" lazy="true" mutable="true" name="shiftdetailses" optimistic-lock="true" sort="unsorted" table="shiftdetails">
            <key on-delete="noaction">
                <column length="10" name="userID" not-null="true"/>
            </key>
            <one-to-many class="com.example.model.Shiftdetails" embed-xml="true" not-found="exception"/>
        </set>
        <set embed-xml="true" fetch="select" inverse="true" lazy="true" mutable="true" name="managerreplytofcses" optimistic-lock="true" sort="unsorted" table="managerreplytofcs">
            <key on-delete="noaction">
                <column length="10" name="userID" not-null="true"/>
            </key>
            <one-to-many class="com.example.model.Managerreplytofcs" embed-xml="true" not-found="exception"/>
        </set>
        <set embed-xml="true" fetch="select" inverse="true" lazy="true" mutable="true" name="fcdetailses" optimistic-lock="true" sort="unsorted" table="fcdetails">
            <key on-delete="noaction">
                <column length="10" name="userID" not-null="true"/>
            </key>
            <one-to-many class="com.example.model.Fcdetails" embed-xml="true" not-found="exception"/>
        </set>
        <set embed-xml="true" fetch="select" inverse="true" lazy="true" mutable="true" name="absencesesForUserIdsend" optimistic-lock="true" sort="unsorted" table="absences">
            <key on-delete="noaction">
                <column length="10" name="userIDsend" not-null="true"/>
            </key>
            <one-to-many class="com.example.model.Absences" embed-xml="true" not-found="exception"/>
        </set>
        <set embed-xml="true" fetch="select" inverse="true" lazy="true" mutable="true" name="absencesesForUserIdchange" optimistic-lock="true" sort="unsorted" table="absences">
            <key on-delete="noaction">
                <column length="10" name="userIDchange"/>
            </key>
            <one-to-many class="com.example.model.Absences" embed-xml="true" not-found="exception"/>
        </set>
    </class>
</hibernate-mapping>
